name: Java CI

on: push

jobs:
  build:

    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v1
   # - name: Set up JDK 1.8
   #   uses: actions/setup-java@v1
   #   with:
   #     java-version: 1.8
    - name: Compile with Maven
      run: mvn compile
    - name: Code Review with Maven
      run: mvn pmd:pmd
    - name: Testing with Maven
      run: mvn test  
    - name: CoverageChecks with Maven
      run: mvn cobertura:cobertura -Dcobertura.report.format=xml
    #- name: Sonar Verify
     # run: mvn verify sonar:sonar  
    - name: Build with Maven
      run: mvn package
  
  #deploy:
  #  runs-on: ubuntu-latest
   # name: Docker push
   # needs: [build]
   # steps:
  #  - uses: actions/checkout@v1
    - name: Copy war file
      run: cp /home/runner/work/GitHub-Ramco-Demo/GitHub-Ramco-Demo/target/addressbook.war .
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag 8884691005/abook:12
    - name: Docker credentials
      run: docker login --username 8884691005 --password ${{secrets.DOCKER_SECRET}} 
    - name: Pushing the image on DockerHub
      run: docker push 8884691005/abook:12
        
  sonar:
    name: Test - SonarCloud Scan
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: SonarCloud Scan
        run: mvn -B clean verify -Psonar -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GANESHJ }}
  aritifacts:             
    name: Publish Maven Artifacts
    runs-on: ubuntu-latest
    needs: [build, sonar]
    
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Publish artifact on GitHub Packages
        run: mvn deploy
        env:
         GITHUB_TOKEN: ${{secrets.GANESHJ}}  #npm_token
